version: '3.8'

services:
  kubeinsights:
    image: kubeinsights:1.0
    build: .
    volumes:
      - ./:/kubeinsights
      - $HOME/.kube/config:/root/.kube/config
    command: ["tail", "-f", "/dev/null"]
    # environment:
    #   - KAFKA_BROKER_URL=kafka:9092
    #   - KAFKA_TOPIC=cluster1
    #   - KAFKA_GROUP_ID=foo
    #   - DATA_DEST=kafka
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: false 
    # entrypoint:
    #   - "sh"
    #   - "-c"
    #   - |
    #     #!/bin/bash
    #     (
    #       echo "Waiting for Kafka to start..."
    #       while ! nc -z localhost 29092; do
    #         sleep 1
    #       done
    #       echo "Kafka is up!"
    #       /bin/kafka-topics --create \
    #           --bootstrap-server localhost:29092 \
    #           --replication-factor 1 \
    #           --partitions 3 \
    #           --topic cluster1
    #       echo "Topic 'cluster1' created successfully!"
    #     ) &
    #     exec /etc/confluent/docker/run